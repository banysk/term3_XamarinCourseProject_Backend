--------------------------
-- TRIGGER_AUTH_CHANGED --
--------------------------
CREATE OR REPLACE FUNCTION AUTH_CHANGED()
RETURNS TRIGGER
LANGUAGE plpgsql AS $$
begin
	IF TG_OP = 'UPDATE' THEN
		-- login
		IF OLD.login != NEW.login THEN
			INSERT INTO public.AUTH_CHANGES(user_id, change_from, change_to, change_type)
			SELECT OLD.user_id,
			OLD.login,
			NEW.login,
			public.CHANGE_TYPES.id FROM public.CHANGE_TYPES
			WHERE public.CHANGE_TYPES.type_name = 'login';
		END IF;
		-- password
		IF OLD.user_password != NEW.user_password THEN
			INSERT INTO public.AUTH_CHANGES(user_id, change_from, change_to, change_type)
			SELECT OLD.user_id,
			OLD.user_password,
			NEW.user_password,
			public.CHANGE_TYPES.id FROM public.CHANGE_TYPES
			WHERE public.CHANGE_TYPES.type_name = 'password';
		END IF;
		RETURN NEW;
	END If;
end;
$$;

CREATE TRIGGER TRIGGER_AUTH_CHANGED BEFORE UPDATE ON public.auth 
FOR EACH ROW EXECUTE PROCEDURE AUTH_CHANGED();